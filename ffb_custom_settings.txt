######################################################
# NAME: FullFFB by JP v12
# Based on "Momentum Rack" and NuScorpii files
# By JP (Joaquim Pereira)
# 
# This is a full-bodied FFB!! It is not for everyone, some may prefer a cabin by a bend in the river... :)
# The final goal is to include all forces acting on the car, while been front axle biased (that's where the steering wheel is connected, right? :) )
# It should shorten the incoherence between visual and tactile effects in AMS2 that many identify as a physics related problem (the visuals show information and FFB is completely mute to that, leading to a cognitive dissonance).
# If the car moves (track/crash bumps, lateral and longitudinal weight transfers, etc.), FFB should signal that in some way.
#
# It's assumed a linear/neutral profile on wheelbase software/driver.
# Many manufactures add they own telemetry interpretation on top of FFB provided by the game. That could increase (if in phase) or cancel this file's FFB details (if in opposite phase).
# Please, control clipping (histogram last bar, on tyre/suspension HUD), PARTICULARLY if you have a strong wheelbase. That (red) bar can appear on high suspension stress situations (high downforce + high speed turn + hitting a kerb), but just a touch.
# I also assume a best practice of limiting max torque at wheelbase software/hardware, not reducing GAIN or FFB strength in game.
#
#
# My test conditions (may account for final results):
# In-game dials:  65-00-20-00
# Moza R12 (75% max torque), linear/neutral settings
#
# v12
# Increased front axel complexity/layers
# Elimination of vibrations around the center
# Code cleanup/simplification
#
# Still to improve/implement:
# (no roadmap)
#


##################################################################################
#
# Madness bug?
#
# Create many vars here so the madness bug will hit that.
# (just in case...)

(var1       1.0)
(var2       1.0)
(var3       1.0)
(var4       1.0)
(var5       1.0)
(var6       1.0)
(var7       1.0)
(var8       1.0)
(var9       1.0)
(var10      1.0)
(var11      1.0)
(var12      1.0)
(var13      1.0)
(var14      1.0)
(var15      1.0)
(var16      1.0)
(var17      1.0)
(var18      1.0)
(var19      1.0)
(var20      1.0)
(var21      1.0)
(var22      1.0)
(var23      1.0)
(var24      1.0)
(var25      1.0)
(var26      1.0)
(var27      1.0)
(var28      1.0)
(var29      1.0)
(var30      1.0)


##MTUV_START

# Min Force - Set to fill the low end forces zone (good for low power, typically belt and gear driven wheels)
# Typical values 0.06 - 0.12

(min_force 0.00)

###########################################################################################################
# Scaling settings ----------------------------------------

# Rack - amplification of rack forces

(macro_details 1.0)			# bigger suspension details [0-1.5]
(micro_details 1.0)		# small suspension details [0-3.0]
(macro_gamma 1.0)			# gamma for macro details
(micro_gamma 1.0)			# gamma for micro details
(adhesion_scale 1.0)		# loss of grip feel coefficient [0-1] (0=no feel, 1=max feel)
(adhesion_gamma 3.0)		# adhesion linearity curve [0.3-4.0] (>1 -> grip loss is felt later, <1 -> grip loss is felt sooner)
(rack_damp 0)	# damping [0-1]
(bump_scale 0.75) 			# bumps and lateral weight transfer amplification factor [0-2]
(lon_coef 0.5)				# longitudinal weight transfer coeficient [0-1]
(lat_coef 0.4)				# lateral weight transfer coeficient [0-2]
(vert_coef 0.5)				# vertical G-Forces effect [0-1]
(surface_amplitude 2.00)	# surface transition amplitude [0-3]
(ABS_freq 0.5)				# ABS frequency [0.2-1.0]
(ABS_gain 0.9)				# ABS amplitude [0-1] (0 will disable ABS effect)

###########################################################################################################
# FX - generated effects (affected by FX slider)

(scrub_scale 0.65)			# scrub feeling [0-3]
(engine_scale_slow 2.6)		# engine feeling - low speed
(engine_scale_fast 0.05) 	# engine feeling - high speed


###########################################################################################################
# Scrub settings ------------------------------------------

# Overall scrub scale - used to scale both front and back

(scrub_scale_master (* scrub_scale 30.0))


# Scrub scale (0.0 - 2.0)
# Set to 0.0 to disable

(scrub_scale_front 1.4)
(scrub_scale_rear 2.0)


# Scrub lambda (inversely proportional to frequency of effect)
# Higher values give lower freq. Best range 1.1 - 1.8

(scrub_lambda_front 1.4)
(scrub_lambda_rear 1.2)

# Scrub spring settings

(scrub_spring_stiffness 20000.0)
(scrub_spring_damping 1.0)
(scrub_spring_effect 1.0)

##MTUV_END


###########################################################################################################
# Reiza variables -----------------------------------------

(lever_mode 0)
(smooth_level 0)
(max_change 1.0)
(scrub_rack 0.0)
(scrub_rear 0.0)
(scrub_vibe 0.0)
(rack_damp_scale 0.0)


###########################################################################################################
# Getting tierods forces from physics engine ----------------------------------------------

(rack_scaled (/ arm_force M_max_force_at_rack))
(rack (* 1.25 rack_scaled vehicle_ffb_gain))


###########################################################################################################
# Scrub FX

# Scrub Front

(sf_s 0.55)
(FL_scrub (soft_clip FL_scrub 2.0 0.0))
(FL_scrub (* (/ 1 (- 1.0 sf_s)) (max 0.0 (- FL_scrub sf_s))))
(FL_scrub (power FL_scrub 2.0))
(FL_scrub (* FL_scrub (oscillator scrub_lambda_front)))
(FR_scrub (soft_clip FR_scrub 2.0 0.0))
(FR_scrub (* (/ 1 (- 1.0 sf_s)) (max 0.0 (- FR_scrub sf_s))))
(FR_scrub (power FR_scrub 2.0))
(FR_scrub (* FR_scrub (oscillator scrub_lambda_front)))

(scrub_scale_factor (* scrub_scale_master scrub_scale_front))

(FL_scrub (* scrub_scale_factor FL_scrub))
(FL_scrub (spring FL_scrub scrub_spring_stiffness scrub_spring_damping scrub_spring_effect))
(FR_scrub (* scrub_scale_factor FR_scrub))
(FR_scrub (spring FR_scrub scrub_spring_stiffness scrub_spring_damping scrub_spring_effect))

# Scrub Rear

(sr_s 0.52)
(RL_scrub (soft_clip RL_scrub 2.0 0.0))
(RL_scrub (* (/ 1 (- 1.0 sr_s)) (max 0.0 (- RL_scrub sr_s))))
(RL_scrub (power RL_scrub 2.0))
(RL_scrub (* RL_scrub (oscillator scrub_lambda_rear)))
(RR_scrub (soft_clip RR_scrub 2.0 0.0))
(RR_scrub (* (/ 1 (- 1.0 sr_s)) (max 0.0 (- RR_scrub sr_s))))
(RR_scrub (power RR_scrub 2.0))
(RR_scrub (* RR_scrub (oscillator scrub_lambda_rear)))

(scrub_scale_factor (* scrub_scale_master scrub_scale_rear))

(RL_scrub (* scrub_scale_factor RL_scrub))
(RL_scrub (spring RL_scrub scrub_spring_stiffness scrub_spring_damping scrub_spring_effect))
(RR_scrub (* scrub_scale_factor RR_scrub))
(RR_scrub (spring RR_scrub scrub_spring_stiffness scrub_spring_damping scrub_spring_effect))


###########################################################################################################
# Texture -------------------------------------------------

# Combining road effects
(FL_tex (+ FL_scrub RL_scrub))
(FR_tex (+ FR_scrub RR_scrub))
(tex (+ FL_tex FR_tex))

# Smooth texture at standstill / very low speeds
(slow_tex (smooth tex 0.1))
(slow_tex (drag slow_tex 0.0001 0.0))
(speed_bias (max 0.0 (min 1.0 (/ vel_mag 10.0))))
(tex (blend speed_bias slow_tex tex))

# Engine
(max_rps 8000.0)

(rps_scale ( / crankshaft max_rps 2))
(rps_scale ( power rps_scale 0.8))
(rps_scale (min rps_scale 0.005))
(rps_scale (max rps_scale 0.28))

(load_mult (+ 0.8 throttle))
(load_mult (max load_mult 1.0))

(engine_scale (blend (min 1.0 (/ vel_mag 15.0)) engine_scale_slow engine_scale_fast))
(engine_vibe (sin crankPos))
(engine_vibe ( * load_mult engine_vibe rps_scale engine_scale))

(feel (+ tex engine_vibe))



###########################################################################################################
# Rack ----------------------------------------------------

# Static front load
(f_load_avg (/ (+ FL_load FR_load) 2.0))

(counter (+ counter 1.0))
(counter (if (max 0 (- et 0.2)) (counter) (1.0) ))
(counter (if (max 0 (- counter 10000)) 10000 counter))

(moving_avg (+ moving_avg 0.0))
(moving_avg (if moving_avg moving_avg f_load_avg))
(moving_avg (+ (* moving_avg (/ (- counter 1.0) counter)) (* f_load_avg (/ 1.0 counter))))

(static_load moving_avg)

###########################################################################################################
# Adhesion curves
(adhesion_front (- 1.0 (/ (+ FL_slide FR_slide) 2.0)))
(adhesion_rear (- 1.0 (/ (+ RL_slide RR_slide) 2.0)))
(adhesion_front (- 1 (power (- 1 adhesion_front) adhesion_gamma)))
(adhesion_rear (- 1 (power (- 1 adhesion_rear) adhesion_gamma)))
(adhesion_front_scaled (blend adhesion_scale 1.0 adhesion_front))
(adhesion_rear_scaled (blend adhesion_scale 1.0 adhesion_rear))


###########################################################################################################
# Split out detail levels
(rack_fine_detail (- rack (smooth rack 0.003)))
(rack_coarse_detail (smooth rack 0.02))
(rack_medium_detail (- (- rack rack_fine_detail) rack_coarse_detail))


# Apply gamma to details
(rack_fine_detail (power rack_fine_detail micro_gamma))
(rack_medium_detail (power rack_medium_detail macro_gamma))

# Apply LFB
(rack_coarse_lfb (lfb (* rack_coarse_detail adhesion_front_scaled) (+ lfb_slider 0.01)))


###########################################################################################################
# JP's Effects 

# Dynamic load funtion
(load_factor (- 1 (tanh (/ f_load_avg static_load))))
(load_factor (max -0.4 load_factor))
(rack_coarse_lfb (* 2 (tanh (/ rack_coarse_lfb (- 1.5 (/ load_factor 3))))))

# longitudinal weight transfer factor
(lonG_factor (+ 1 (max 0 (tanh (* 1.2 lon_G)))))

# weight transfer
(suspension_delta (tanh (/ (- FL_load FR_load) static_load)))
(delta_load_wt (* (+ 0.5 load_factor) suspension_delta adhesion_front_scaled))
(latG_force (/ (tanh (* 10 lat_G)) 5)) #was 15/5
(wt_factor (- (* delta_load_wt 0.65) latG_force))
(rack_coarse_lfb (+ rack_coarse_lfb wt_factor))

#front wheels delta
(angle_delta (* 0.05 (- FR_angvel FL_angvel)))
(angle_delta (/ (tanh (* 4 angle_delta)) 3))
(rack_coarse_lfb (+ rack_coarse_lfb (* angle_delta adhesion_front_scaled)))

# vertical bumps
(vertG_accel (- vert_G (smooth vert_G 0.35)))	#G-Forces jerk amplitude
(vertG_factor (* (power (abs vertG_accel) 2.0) (signo suspension_delta)))
(vertG_factor (* vertG_factor vert_coef))
(rack_coarse_lfb (+ rack_coarse_lfb (smooth vertG_factor 0.005)))

# car rotation
(rack_coarse_lfb (+ rack_coarse_lfb (* (smooth yaw_raw 0.005) (+ 1 (- 1 adhesion_rear_scaled)) lonG_factor lat_coef)))

# surface transitions
(L_surfaces (- FL_bump_kerb (/ FL_bump_offroad 2)))
(R_surfaces (- FR_bump_kerb (/ FR_bump_offroad 2)))
(surfaces_mov (spring (- R_surfaces L_surfaces) 20000 0.1 1.0))
(rack_coarse_lfb (+ rack_coarse_lfb (* 0.65 surfaces_mov)))

# offroad surface
(is_offroad (/ (+ FL_bump_offroad FR_bump_offroad RL_bump_offroad RL_bump_offroad) 4))
(offroad_component (smooth is_offroad 0.2))
(speed_component (crossover vel_mag 5 30))
(offroad_tex1 (if is_offroad (oscillator (* 10 offroad_component)) 0))
(offroad_tex2 (if is_offroad (* speed_component (oscillator (* 2 speed_component))) 0))
(rack_coarse_lfb (+ rack_coarse_lfb (* 0.35 (+ offroad_tex1 offroad_tex2) offroad_component)))

#ABS effect
(ABS_tex (tanh (* 10 (oscillator ABS_freq))))
(speed_bias (crossover vel_mag 10 20))
(rack_coarse_lfb (+ rack_coarse_lfb (* abs_active ABS_tex speed_bias ABS_gain)))


###########################################################################################################
# Combine rack and details

(fine_details_amplifier (+ 0.25 (* micro_details (- 1 adhesion_front_scaled))))
(medium_details_amplifier (* 2.5 macro_details))

(rack (+ rack_coarse_lfb (* rack_medium_detail medium_details_amplifier) (* rack_fine_detail fine_details_amplifier)))

###########################################################################################################
# Construct Output

# Rack damping
(sv (smooth (- steering_pos lsp) 0.05))
(lsp steering_pos)
(ssv (+ (* 0.7 (/ sv dt)) (* 0.3 ssv)))
(rack (+ rack (* rack_damp ssv)))
 
# Smooth rack at standstill / very low speeds
(slow_rack (/ (drag rack 0.0001 0.0) 2.5))
(slow_rack (smooth slow_rack 0.1))
(ms (* 0.25 (smooth steering_vel 0.005)))
(speed_bias (max 0.1 (min 1.0 (/ vel_mag 3.0))))
(rack (blend speed_bias (+ slow_rack ms) rack))


# FX LFB
(feel (lfb feel lfb_slider))

###########################################################
#
# Road features settings
#
(master_road                  (* damping_slider 4))				#Road bumps
(kmh                (* (abs vel_mag) 3600 0.001))
(speed_bias10       (max 0.0 (min 1.0 (/ (- kmh 3) 7.0))))
(e                  2.71828182846)
(large_track_bump_scale       1.4)		
(large_offroad_bump_scale     2.3)		
(bump_feel_follow_weight      0.50)
(rear_bump_scale              0.2)
(rear_bump_hard               0.4)
(supress_micro_bumps 1)
(supress_large_bumps 2)


###########################################################
#
# Dynamic adjustment to bump feel based on car weight
#

(bump_weight_scale            (/ 800 (/ (+ corner_FL corner_FR) 9.8)))
(bump_weight_scale            (+ 1 (* bump_feel_follow_weight (- bump_weight_scale 1))))
(rear_bump_scale              (* rear_bump_scale bump_weight_scale))



###########################################################
#
# Road Bumps
#




(left_bump        (* 0.002 (- FL_load (smooth FL_load 0.015))))
(right_bump       (* 0.002 (- FR_load (smooth FR_load 0.015))))
(left_bump_pos    left_bump_pos)
(right_bump_pos   right_bump_pos)
(left_bump_pos    (+ left_bump_pos (* (- left_bump left_bump_pos) (power 0.001 dt))))
(right_bump_pos   (+ right_bump_pos (* (- right_bump right_bump_pos) (power 0.001 dt))))
(left_bump_pos    (max left_bump_pos left_bump))
(right_bump_pos   (max right_bump_pos right_bump))
(left_bump        (spring left_bump_pos  10000 0.1))
(right_bump       (spring right_bump_pos 10000 0.1))
(left_bump        (* (power (- 1 (min 1 (abs left_bump))) supress_large_bumps) left_bump))
(right_bump       (* (power (- 1 (min 1 (abs right_bump))) supress_large_bumps) right_bump))
(left_bump        (* left_bump (if FL_bump_kerb 0 (if FL_bump_offroad large_offroad_bump_scale large_track_bump_scale))))
(right_bump       (* right_bump (if FR_bump_kerb 0 (if FR_bump_offroad large_offroad_bump_scale large_track_bump_scale))))
(road_bumps       (blend (smooth (min 1 (+ FL_bump_kerb FR_bump_kerb)) 0.015) (+ left_bump right_bump) (- left_bump right_bump)))




(left             (* 0.95 (- RL_load (smooth RL_load 0.005))))
(right            (* 0.95 (- RR_load (smooth RR_load 0.005))))
(left1            left1)
(right1           right1)
(left1            (* left1 (power 0.02 dt)))
(right1           (* right1 (power 0.02 dt)))
(left1            (max left left1))
(right1           (max right right1))
(left1            (+ left1  (* 0.7 (- (smooth RL_load 0.004) (smooth RL_load 0.008)))))
(right1           (+ right1 (* 0.7 (- (smooth RR_load 0.004) (smooth RR_load 0.008)))))
(rear             (+ (* left1 mom_FL2 (if FL_bump_offroad 0 1)) (* right1 mom_FR2 (if FR_bump_offroad 0 1))))
(rear             (- rear (smooth rear 0.02)))
(rear             (spring rear (* rear_bump_hard 10000) 1.0))
(rear             (* rear 0.0026 rear_bump_scale))



(road_features    (+ road_bumps rear))
(road_features    (blend speed_bias10 0.0 road_features))
(road_features    (* road_features 1.1 master_road (* 2 (power fx 1.6))))


# Combine rack and FX forces
(output (+ rack road_features (* feel fx)))


# Scaler for info, no affect on output --------------------
(scale_window_init 10.0)
(scale_window_nominal 2.0)
(scale_soft_clear_t 10.0)
(scale_min 0.2)
(scale_max 2.0)
(scale_blend_t 0.5)
(signal_scale output
        1.0 1.0 1.0 1.0 1.0
        0.0
        0.0 0.0)
			

# Output ------------------------------------------------
(output (* output gain 0.50))


# Lock stops ----------------------------------------------
(custom_lock_stop 2.0)
(stops (bumpstop output 0.15 0.5 0.15 1.0))
(output (+ output (* stops custom_lock_stop)))

# Clipping control ----------------------------------------------
(doom_check output)

# Statistics output ---------------------------------------
(histogram output)

(info2 output)
